model Account {
  id String @id @default(cuid())
  userId String
  type String
  provider String
  providerAccountId String
  refresh_token String @db.Text
  access_token String @db.Text
  expires_at Int
  token_type String
  scope String
  id_token String @db.Text
  session_state String

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id String @id @default(cuid())
  sessionToken String
  userId String
  expires DateTime
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model User {
  id        String    @id @default(cuid())
  username      String @unique
  password String
  country   String
  city      String
  hobbies   UserHobby[]
  accounts  Account[]
  sessions Session[]

  @@map("users")
}

model Hobby {
  id   Int    @id @default(autoincrement())
  name String @unique
  users UserHobby[]

  @@map("hobbies")
}

model UserHobby {
  userId   String
  hobbyId  Int

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  hobby Hobby @relation(fields: [hobbyId], references: [id], onDelete: Cascade)

  @@id([userId, hobbyId])
  @@map("user_hobbies")
}